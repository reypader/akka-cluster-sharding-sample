akka {
  actor {
    provider = "cluster"
    serialization-bindings {
      "com.rmpader.gitprojects.JsonSerializable" = jackson-json
    }
  }
  extensions = [akka.persistence.Persistence]
  persistence {

    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }

    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }

  }
  cluster {
    sharding {
      number-of-shards = 1000
    }
  }
  management {
    http {
      route-providers-read-only = true
    }
    health-checks {
      readiness-checks {
        cluster-membership = "akka.management.cluster.scaladsl.ClusterMembershipCheck"
      }
    }
    cluster {
      health-check {
        # Ready health check returns 200 when cluster membership is in the following states.
        # Intended to be used to indicate this node is ready for user traffic so Up/WeaklyUp
        # Valid values: "Joining", "WeaklyUp", "Up", "Leaving", "Exiting", "Down", "Removed"
        ready-states = ["Up", "WeaklyUp"]
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "slick"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "slick"
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  use-shared-db = "slick"
}